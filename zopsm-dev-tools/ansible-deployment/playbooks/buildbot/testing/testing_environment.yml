################################ RABBITMQ #################################################

- hosts: rabbit-01
  remote_user: ubuntu
  become: yes

  tasks:
  - name: ensure vhost testing is present
    rabbitmq_vhost: name=testing state=present
    ignore_errors: yes

  - name: add zopsm user
    rabbitmq_user: user=tester password=deij3oD7eith2nuVheiseiV1 tags=administrator,tester vhost=testing configure_priv=.* write_priv=.* read_priv=.* state=present
    ignore_errors: yes

#############################################################################################
#
#
#
#
################################ RIAK #####################################################

- hosts: riak-01
  remote_user: ubuntu
  become: yes

  tasks:
  - name: create testing_rabbit_hook bucket-type
    shell: riak-admin bucket-type create testing_rabbit_hook '{"props":{"backend":"buckets_with_30d_ttl","postcommit":[{"mod":"riak_rabbitmq","fun":"postcommit_send_amqp"}]}}'
    ignore_errors: yes

  - name: activate hook bucket-type
    shell: riak-admin bucket-type activate testing_rabbit_hook
    ignore_errors: yes

  - name: create testing_logs bucket-type
    shell: riak-admin bucket-type create testing_logs '{"props":{"backend":"buckets_with_7d_ttl"}}'
    ignore_errors: yes

  - name: activate testing_logs bucket-type
    shell: riak-admin bucket-type activate testing_logs
    ignore_errors: yes

  - name: create testing_zopsm bucket-type
    shell: riak-admin bucket-type create testing_zopsm '{"props":{"backend":"buckets_with_no_ttl"}}'
    ignore_errors: yes

  - name: activate hook bucket-type
    shell: riak-admin bucket-type activate testing_zopsm
    ignore_errors: yes

#############################################################################################
#
#
#
#
############################# TESTING CONTAINERS #################################################

- hosts: worker-02
  remote_user: ubuntu
  become: yes
  vars:
    postgres_master: "{{ postgres_master }}"

  tasks:
  - name: cd into /home/ubuntu/zopsm and get the latest commit
    shell: cd /buildbot/testing_container_builder/build/zopsm && git rev-parse --short HEAD
    delegate_to: localhost
    register: latest_commit

  - name: clone or update zopsm
    git:
      repo: 'git@github.com:kunthar/zopsm.git'
      dest: /home/ubuntu/zopsm
      clone: no
      update: yes
      version: "{{ lookup('env', 'BRANCH_NAME') | default('develop', true) }}"
      force: yes
      key_file: /home/ubuntu/.ssh/id_rsa
      accept_hostkey: yes

  - name: checkout develop branch in zopsm
    shell: cd /home/ubuntu/zopsm && git checkout {{ lookup('env', 'BRANCH_NAME') | default('develop', true) }}

  - name: clone or update zopsm
    git:
      repo: 'git@github.com:kunthar/zopsm.git'
      dest: /home/ubuntu/zopsm
      clone: no
      version: "{{ lookup('env', 'BRANCH_NAME') | default('develop', true) }}"
      update: yes
      force: yes
      key_file: /home/ubuntu/.ssh/id_rsa
      accept_hostkey: yes
    delegate_to: "{{ hostvars[groups['workers'][0]].ansible_ssh_host }}"

  - name: checkout master branch in zopsm
    shell: cd /home/ubuntu/zopsm && git checkout {{ lookup('env', 'BRANCH_NAME') | default('develop', true) }}
    delegate_to: "{{ hostvars[groups['workers'][0]].ansible_ssh_host }}"

  - name: create local facts folder
    file:
      path: /etc/ansible/facts.d
      state: directory
      mode: 0755

  - name: create local facts testing_zopsm.fact
    file:
      path: /etc/ansible/facts.d/testing_zopsm.fact
      state: touch

  - name: set container names
    set_fact:
      gateway: "testing_gateway"
      gateway_port: "9999"
      auth: "testing_auth"
      auth_port: "9998"
      worker: "testing_worker"
      worker1: "testing_worker1"
      mda: "testing_mda"
      mda_port: "9997"
      push: "testing_push"
      push_port: "9996"
      saas: "testing_saas"
      saas_port: "9995"
      zlogger: "testing_zlogger"
      redis_db: "5"
      vault_token: "{{ lookup('env', 'VAULT_DEV_TOKEN') }}"


  - name: write /etc/ansible/facts.d/testing_zopsm.fact
    blockinfile:
      dest: /etc/ansible/facts.d/testing_zopsm.fact
      block: |
        [container]
        gateway={{ gateway }}
        auth={{ auth }}
        worker={{ worker }}
        worker1={{ worker1 }}
        mda={{ mda }}
        push={{ push }}
        saas={{ saas }}
        zlogger={{ zlogger }}
        redis_db={{ redis_db }}
      state: present

  - name: create dict from vault group
    set_fact:
       vault_host_ip: "{{ vault_host_ip|default({}) | combine( {hostvars[item].name + '.vault': hostvars[item].ansible_ssh_host} ) }}"
    with_items: "{{ groups['vault'] }}"

  - name: run zlogger container
    docker_container:
      name: "{{ zlogger }}"
      image: zetaops/zlogger
      api_version: 1.32
      restart_policy: unless-stopped
      env:
         CONSUL_HOST:  "{{ ansible_default_ipv4.address }}"
         WORKING_ENVIRONMENT: "testing"
         RABBIT_VHOST: "testing"
         RABBIT_EXCHANGE: "inter_comm"
         VAULT_WORKING_PATH: "testing"
         VAULT_DEV_TOKEN: "{{ vault_token }}"
      etc_hosts: "{{ vault_host_ip }}"
      volumes:
        - "/home/ubuntu/zopsm:/usr/local/lib/python3.6/site-packages/zopsm"
        - '/home/ubuntu/bb:/usr/local/share/ca-certificates/'
      state: started

  - name: run gateway container
    docker_container:
      name: "{{ gateway }}"
      image: zetaops/gw
      api_version: 1.32
      restart_policy: unless-stopped
      ports:
        - "{{ gateway_port }}:8888"
      volumes:
        - "/home/ubuntu/zopsm:/usr/local/lib/python3.6/site-packages/zopsm"
        - '/home/ubuntu/bb:/usr/local/share/ca-certificates/'
      etc_hosts: "{{ vault_host_ip }}"
      env:
         CONSUL_HOST:  "{{ ansible_default_ipv4.address }}"
         CONTAINER_NAME: "{{ gateway }}"
         CONTAINER_PORT: "{{ gateway_port }}"
         DOCKER_HOST_IPV4: "{{ ansible_default_ipv4.address }}"
         WORKING_ENVIRONMENT: "testing"
         RABBIT_VHOST: "testing"
         RABBIT_EXCHANGE: "inter_comm"
         VAULT_WORKING_PATH: "testing"
         VAULT_DEV_TOKEN: "{{ vault_token }}"
         REDIS_DB: "{{ redis_db }}"
      log_driver: syslog
      log_options:
        syslog-address: "udp://159.69.31.151:514"
        syslog-facility: "daemon"
        tag: "roc-container"
      state: started

  - name: run push container
    docker_container:
      name: "{{ push }}"
      image: zetaops/push
      api_version: 1.32
      restart_policy: unless-stopped
      ports:
        - "{{ push_port }}:9500"
      volumes:
        - "/home/ubuntu/zopsm:/usr/local/lib/python3.6/site-packages/zopsm"
        - '/home/ubuntu/bb:/usr/local/share/ca-certificates/'
      etc_hosts: "{{ vault_host_ip }}"
      env:
         CONSUL_HOST:  "{{ ansible_default_ipv4.address }}"
         CONTAINER_NAME: "{{ push }}"
         CONTAINER_PORT: "{{ push_port }}"
         DOCKER_HOST_IPV4: "{{ ansible_default_ipv4.address }}"
         WORKING_ENVIRONMENT: "testing"
         RABBIT_VHOST: "testing"
         RABBIT_EXCHANGE: "inter_comm"
         VAULT_WORKING_PATH: "testing"
         VAULT_DEV_TOKEN: "{{ vault_token }}"
         REDIS_DB: "{{ redis_db }}"
      log_driver: syslog
      log_options:
        syslog-address: "udp://159.69.31.151:514"
        syslog-facility: "daemon"
        tag: "push-container"
      state: started

  - name: run auth container
    docker_container:
      name: "{{ auth }}"
      image: zetaops/auth
      api_version: 1.32
      restart_policy: unless-stopped
      ports:
        - "{{ auth_port }}:8000"
      volumes:
        - "/home/ubuntu/zopsm:/usr/local/lib/python3.6/site-packages/zopsm"
        - '/home/ubuntu/bb:/usr/local/share/ca-certificates/'
      etc_hosts: "{{ vault_host_ip }}"
      env:
         CONSUL_HOST:  "{{ ansible_default_ipv4.address }}"
         CONTAINER_NAME: "{{ auth }}"
         CONTAINER_PORT: "{{ auth_port }}"
         DOCKER_HOST_IPV4: "{{ ansible_default_ipv4.address }}"
         WORKING_ENVIRONMENT: "testing"
         RABBIT_VHOST: "testing"
         RABBIT_EXCHANGE: "inter_comm"
         VAULT_WORKING_PATH: "testing"
         VAULT_DEV_TOKEN: "{{ vault_token }}"
         REDIS_DB: "{{ redis_db }}"
      log_driver: syslog
      log_options:
        syslog-address: "udp://159.69.31.151:514"
        syslog-facility: "daemon"
        tag: "auth-container"
      state: started

  - name: run mda container
    docker_container:
      name: "{{ mda }}"
      image: zetaops/zopsm-mda
      api_version: 1.32
      restart_policy: unless-stopped
      ports:
        - "{{ mda_port }}:9000"
      volumes:
        - "/home/ubuntu/zopsm:/usr/local/lib/python3.6/site-packages/zopsm"
        - '/home/ubuntu/bb:/usr/local/share/ca-certificates/'
      etc_hosts: "{{ vault_host_ip }}"
      env:
         CONSUL_HOST:  "{{ ansible_default_ipv4.address }}"
         CONTAINER_NAME: "{{ mda }}"
         CONTAINER_PORT: "{{ mda_port }}"
         DOCKER_HOST_IPV4: "{{ ansible_default_ipv4.address }}"
         WORKING_ENVIRONMENT: "testing"
         RABBIT_VHOST: "testing"
         RABBIT_EXCHANGE: "inter_comm"
         VAULT_WORKING_PATH: "testing"
         VAULT_DEV_TOKEN: "{{ vault_token }}"
         REDIS_DB: "{{ redis_db }}"
      log_driver: syslog
      log_options:
        syslog-address: "udp://159.69.31.151:514"
        syslog-facility: "daemon"
        tag: "mda-container"
      state: started

  - name: run worker container
    docker_container:
      name: "{{ worker }}"
      image: zetaops/zmta
      api_version: 1.32
      restart_policy: unless-stopped
      volumes:
        - "/home/ubuntu/zopsm:/usr/local/lib/python3.6/site-packages/zopsm"
        - '/home/ubuntu/bb:/usr/local/share/ca-certificates/'
      etc_hosts: "{{ vault_host_ip }}"
      env:
         CONSUL_HOST:  "{{ ansible_default_ipv4.address }}"
         CONTAINER_NAME: "{{ worker }}"
         DOCKER_HOST_IPV4: "{{ ansible_default_ipv4.address }}"
         WORKING_ENVIRONMENT: "testing"
         VAULT_DEV_TOKEN: "{{ vault_token }}"
         RABBIT_VHOST: "testing"
         RABBIT_EXCHANGE: "inter_comm"
         VAULT_WORKING_PATH: "testing"
         MTA_RIAK_DEFAULT_BUCKET_TYPE: "testing_zopsm"
         MTA_RIAK_RABBIT_HOOK_BUCKET_TYPE: "testing_rabbit_hook"
         REDIS_DB: "{{ redis_db }}"
         RABBIT_VIRTUAL_HOST: "testing"
      log_driver: syslog
      log_options:
        syslog-address: "udp://159.69.31.151:514"
        syslog-facility: "daemon"
        tag: "worker-container"
      state: started

  - name: run worker1 container
    docker_container:
      name: "{{ worker1 }}"
      image: zetaops/zmta
      api_version: 1.32
      restart_policy: unless-stopped
      volumes:
        - "/home/ubuntu/zopsm:/usr/local/lib/python3.6/site-packages/zopsm"
        - '/home/ubuntu/bb:/usr/local/share/ca-certificates/'
      etc_hosts: "{{ vault_host_ip }}"
      env:
         CONSUL_HOST:  "{{ ansible_default_ipv4.address }}"
         CONTAINER_NAME: "{{ worker1 }}"
         DOCKER_HOST_IPV4: "{{ ansible_default_ipv4.address }}"
         WORKING_ENVIRONMENT: "testing"
         VAULT_DEV_TOKEN: "{{ vault_token }}"
         RABBIT_VHOST: "testing"
         RABBIT_EXCHANGE: "inter_comm"
         VAULT_WORKING_PATH: "testing"
         MTA_RIAK_DEFAULT_BUCKET_TYPE: "testing_zopsm"
         MTA_RIAK_RABBIT_HOOK_BUCKET_TYPE: "testing_rabbit_hook"
         REDIS_DB: "{{ redis_db }}"
         RABBIT_VIRTUAL_HOST: "testing"
      log_driver: syslog
      log_options:
        syslog-address: "udp://159.69.31.151:514"
        syslog-facility: "daemon"
        tag: "worker-container"
      state: started
    delegate_to: "{{ hostvars['worker-01'].ansible_ssh_host }}"

  - name: run migrater container
    docker_container:
      name: "migrater"
      image: zetaops/saas
      api_version: 1.32
      ports:
        - "9000:10000"
      volumes:
        - "/home/ubuntu/zopsm:/usr/local/lib/python3.6/site-packages/zopsm"
        - '/home/ubuntu/bb:/usr/local/share/ca-certificates/'
      etc_hosts: "{{ vault_host_ip }}"
      env:
         CONSUL_HOST:  "{{ ansible_default_ipv4.address }}"
         CONTAINER_NAME: "migrater"
         CONTAINER_PORT: "9000"
         DOCKER_HOST_IPV4: "{{ ansible_default_ipv4.address }}"
#         DB_HOST: "{{ postgres_master }}"
         DB_USER: 'tester'
         DB_PASSWORD: 'aeBo8AiKood9IeWo'
         DB_NAME: 'testing'
         DB_PORT: '5432'
         RABBIT_VHOST: "testing"
         RABBIT_EXCHANGE: "inter_comm"
         VAULT_WORKING_PATH: "testing"
         SECRET_KEY: 'supersupersecretkey'
         WORKING_ENVIRONMENT: "testing"
         VAULT_DEV_TOKEN: "{{ vault_token }}"
         REDIS_DB: "{{ redis_db }}"
      entrypoint: /usr/local/bin/python3
      command: /usr/local/lib/python3.6/site-packages/zopsm/saas/manage.py reset
      state: started

  - name: run saas container
    docker_container:
      name: "{{ saas }}"
      image: zetaops/saas
      api_version: 1.32
      restart_policy: unless-stopped
      ports:
        - "{{ saas_port }}:10000"
      volumes:
        - "/home/ubuntu/zopsm:/usr/local/lib/python3.6/site-packages/zopsm"
        - '/home/ubuntu/bb:/usr/local/share/ca-certificates/'
      etc_hosts: "{{ vault_host_ip }}"
      env:
         CONSUL_HOST:  "{{ ansible_default_ipv4.address }}"
         CONTAINER_NAME: "{{ saas }}"
         CONTAINER_PORT: "{{ saas_port }}"
         DOCKER_HOST_IPV4: "{{ ansible_default_ipv4.address }}"
#         DB_HOST: "{{ postgres_master }}"
         ACCOUNT_LIMIT: '{"project_limit": 5,"user_limit": 10, "message_limit": {"roc": 20,"push": 20,"sms": 0}}'
         DB_NAME: 'testing'
         DB_PORT: '5432'
         SECRET_KEY: 'supersupersecretkey'
         RABBIT_VHOST: "testing"
         RABBIT_EXCHANGE: "inter_comm"
         VAULT_WORKING_PATH: "testing"
         WORKING_ENVIRONMENT: "testing"
         VAULT_DEV_TOKEN: "{{ vault_token }}"
         REDIS_DB: "{{ redis_db }}"
      log_driver: syslog
      log_options:
        syslog-address: "udp://159.69.31.151:514"
        syslog-facility: "daemon"
        tag: "saas-container"
      state: started

  - name: sleep for 5 seconds and continue with play
    wait_for: timeout=5
    delegate_to: "{{ postgres_master }}"

  - name: psql inster 1
    shell: PGPASSWORD=LuCahN7VpooK8wuziThie0airieG8ede psql -h {{ hostvars[item].ansible_ssh_host }} -U postgres -d testing -c  "INSERT INTO tenants VALUES ('c90ca6e8ba974032b09e17dbf1818e3c', 'zopsm_tenant_test@example.com', 'zopsm test tenant', 'zopsm');"
    delegate_to: "{{ item }}"
    with_items:
      - "{{ postgres_master }}"

  - name: psql inster 2
    shell: PGPASSWORD=LuCahN7VpooK8wuziThie0airieG8ede psql -h {{ hostvars[item].ansible_ssh_host }} -U postgres -d testing -c  "INSERT INTO users (role, id, email, tenant_id, password) VALUES ('manager', 'e15571f8bf0744e5a869dc5cd517f8f6', 'zopsm_tenant_manager@example.com', 'c90ca6e8ba974032b09e17dbf1818e3c', 'ce83a5931b8f85e15b2254dc551f8ec00abcb562638cc69afd657a7d3820b445a35c53772dac9d46c1d81d7b40d14893ecc1c087994ea5675b6e3ecc7e33b8e7');"
    delegate_to: "{{ item }}"
    with_items:
      - "{{ postgres_master }}"


#############################################################################################
