@startuml
skinparam defaultFontName Monaco

class Tenant{
    orgranization_name
    email
    adress
    phone

    ..
    id (auto increment field generated by database system)
    creation_time (timestamp, default now only on first save)
    last_update_time (timestamp, now on each save)
    is_deleted  (boolean)
    is_active (boolean)
}
package "Account Objects" as AO {
    together {
        class Account {
            orgranization_name
            email
            adress
            phone
            tenant_id

            ..
            id (auto increment field generated by database system)
            creation_time (timestamp, default now only on first save)
            last_update_time (timestamp, now on each save)
            is_deleted  (boolean)
            is_active (boolean)
        }

        class AccountManager {
            email
            pass
            account_id
            tenant_id

            ..
            id (auto increment field generated by database system)
            creation_time (timestamp, default now only on first save)
            last_update_time (timestamp, now on each save)
            is_deleted  (boolean)
            is_active (boolean)
        }
    }
    Account -> AccountManager


    together {
        class Project {
            name (str)
            description (str)
            services (one to many link, list of services used by app)

            ..
            id (auto increment field generated by database system)
            creation_time (timestamp, default now only on first save)
            last_update_time (timestamp, now on each save)
            is_deleted  (boolean)
            is_active (boolean)
        }

        class ProjectToken {
            project_id
            token

            ..
            id (auto increment field generated by database system)
            creation_time (timestamp, default now only on first save)
            last_update_time (timestamp, now on each save)
            is_deleted  (boolean)
            is_active (boolean)
        }
    }
    ProjectToken -> Project



    class Consumer {
        account_username
        account_id

        ..
        id (auto increment field generated by database system)
        creation_time (timestamp, default now only on first save)
        last_update_time (timestamp, now on each save)
        is_deleted  (boolean)
        is_active (boolean)
    }

    class Service {
        project_id
        service_type
        service_token
        user_limit
        item_limit
        item_used
        user_used

        ..
        id (auto increment field generated by database system)
        creation_time (timestamp, default now only on first save)
        last_update_time (timestamp, now on each save)
        is_deleted  (boolean)
        is_active (boolean)
    }
    note bottom of Service : Services to be consumed by consumers.

}

class User {
    user_id (unique identifier of user on SaaS space)
    username (unique identifier of user on tenant space(s))
    password
    account_id

    ..
    id (auto increment field generated by database system)
    creation_time (timestamp, default now only on first save)
    last_update_time (timestamp, now on each save)
    is_deleted  (boolean)
    is_active (boolean)
}

class ServiceCatalog{
    name
    description

    ..
    id (auto increment field generated by database system)
    creation_time (timestamp, default now only on first save)
    last_update_time (timestamp, now on each save)
    is_deleted  (boolean)
    is_active (boolean)
}
note top of ServiceCatalog : Pre-defined SaaS services.


TenantManager -> Tenant
Tenant <- AO
Project <- Account
Consumer <- Account
User <- Account
Service <- Project
ServiceCatalog -> Service

@enduml
