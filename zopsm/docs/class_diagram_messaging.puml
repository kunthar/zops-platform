@startuml
skinparam defaultFontName Monaco

package Messaging #DDDDDD {

  class Message {
    sender         str  subscriber id of message sender)
    receive        str  subscriber id of message receiver)
    channel        str  channel_id of which channel the message is sent to. )
    sent_time      str  time of client device, UTC with TZ data)
    message_title  str  message title
    message_body   str  message body
    media          str  list of urls of attached medias, max 1K string
    urls           str  list of urls placed in message)
    signature      str  checksum of whole message string except)
    ==
    id (unique identifier of each record, generated by database system)
    tenant_id (str)
    app_id (str)
    service_id (str)
    creation_time (timestamp)
    last_update_time (timestamp)
    is_deleted  (boolean)
    is_active (boolean)
  }


  class Channel {
    name (name of channel)
    description (a short description of channels)
    type (type of channel described above)
    subscribers (list of channels' subscribers)
    last_message (last message sting text, sender, date)
    service_id (service)
    ==
    id (unique identifier of each record, generated by database system)
    tenant_id (str)
    app_id (str)
    service_id (str)
    creation_time (timestamp)
    last_update_time (timestamp)
    is_deleted  (boolean)
    is_active (boolean)
  }


  class Subscriber {
    user_id (user)
    service_id (service)
    ==
    id (unique identifier of each record, generated by database system)
    tenant_id (str)
    app_id (str)
    service_id (str)
    creation_time (timestamp)
    last_update_time (timestamp)
    is_deleted  (boolean)
    is_active (boolean)
  }

  class Invite {
    inviter (user)
    invitee (user)
    channel (channel)
    message (str)
    approve (str, approved, rejected, not_evaluated)
  }

  Invite --> Channel
  Invite --> Subscriber
  Message --> Channel
  Message <-- Subscriber
  Subscriber  o--  Management.User
}



@enduml
